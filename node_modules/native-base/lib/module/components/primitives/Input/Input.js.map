{"version":3,"sources":["Input.tsx"],"names":["React","memo","forwardRef","Box","InputBase","useFormControl","useHasResponsiveProps","useHover","extractInObject","stylingProps","usePropsResolution","mergeRefs","Input","isHovered","isHoveredProp","isFocused","isFocusedProp","props","ref","inputProps","isDisabled","isInvalid","isReadOnly","isRequired","nativeID","setIsFocused","useState","handleFocus","focusState","callback","_ref","useRef","inputThemeProps","disabled","accessibilityInvalid","accessibilityReadOnly","required","InputLeftElement","InputRightElement","leftElement","rightElement","onFocus","onBlur","wrapperRef","resolvedProps","layoutProps","nonLayoutProps","margin","border","layout","flexbox","position","background","baseInputProps","e"],"mappings":"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","sourcesContent":["import React, { memo, forwardRef } from 'react';\nimport Box from '../Box';\nimport type { IInputProps } from './types';\nimport InputBase from './InputBase';\nimport { useFormControl } from '../../composites/FormControl';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\nimport { useHover } from '@react-native-aria/interactions';\nimport { extractInObject, stylingProps } from '../../../theme/tools/utils';\nimport { usePropsResolution } from '../../../hooks/useThemeProps';\nimport { mergeRefs } from '../../../utils';\n\nconst Input = (\n  { isHovered: isHoveredProp, isFocused: isFocusedProp, ...props }: IInputProps,\n  ref: any\n) => {\n  const inputProps = useFormControl({\n    isDisabled: props.isDisabled,\n    isInvalid: props.isInvalid,\n    isReadOnly: props.isReadOnly,\n    isRequired: props.isRequired,\n    nativeID: props.nativeID,\n  });\n  const [isFocused, setIsFocused] = React.useState(false);\n  const handleFocus = (focusState: boolean, callback: any) => {\n    setIsFocused(focusState);\n    callback();\n  };\n\n  const _ref = React.useRef(null);\n  const { isHovered } = useHover({}, _ref);\n\n  const inputThemeProps = {\n    isDisabled: inputProps.disabled,\n    isInvalid: inputProps.accessibilityInvalid,\n    isReadOnly: inputProps.accessibilityReadOnly,\n    isRequired: inputProps.required,\n  };\n\n  const {\n    InputLeftElement,\n    InputRightElement,\n    leftElement,\n    rightElement,\n    onFocus,\n    onBlur,\n    wrapperRef,\n    ...resolvedProps\n  } = usePropsResolution(\n    'Input',\n    {\n      ...inputThemeProps,\n      ...props,\n    },\n    {\n      isDisabled: inputThemeProps.isDisabled,\n      isHovered: isHoveredProp || isHovered,\n      isFocused: isFocusedProp || isFocused,\n      isInvalid: inputThemeProps.isInvalid,\n      isReadOnly: inputThemeProps.isReadOnly,\n    }\n  );\n\n  const [layoutProps, nonLayoutProps] = extractInObject(resolvedProps, [\n    ...stylingProps.margin,\n    ...stylingProps.border,\n    ...stylingProps.layout,\n    ...stylingProps.flexbox,\n    ...stylingProps.position,\n    ...stylingProps.background,\n    'shadow',\n    'opacity',\n  ]);\n\n  const [, baseInputProps] = extractInObject(nonLayoutProps, ['variant']);\n\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps(props)) {\n    return null;\n  }\n  if (InputLeftElement || InputRightElement || leftElement || rightElement) {\n    return (\n      <Box\n        display=\"flex\"\n        flexDirection=\"row\"\n        alignItems=\"center\"\n        justifyContent=\"space-between\"\n        overflow=\"hidden\"\n        {...layoutProps}\n        ref={mergeRefs([_ref, wrapperRef])}\n      >\n        {InputLeftElement || leftElement\n          ? InputLeftElement || leftElement\n          : null}\n        <InputBase\n          InputLeftElement={InputLeftElement}\n          InputRightElement={InputRightElement}\n          leftElement={leftElement}\n          rightElement={rightElement}\n          inputProps={inputProps}\n          bg=\"transparent\"\n          {...baseInputProps}\n          flex={1}\n          disableFocusHandling\n          ref={ref}\n          variant=\"unstyled\"\n          onFocus={(e) => {\n            handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n          }}\n          onBlur={(e) => {\n            handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n          }}\n        />\n        {InputRightElement || rightElement\n          ? InputRightElement || rightElement\n          : null}\n      </Box>\n    );\n  } else {\n    return (\n      <InputBase\n        inputProps={inputProps}\n        isHovered={isHoveredProp}\n        isFocused={isFocusedProp}\n        {...props}\n        ref={ref}\n        onFocus={(e) => {\n          handleFocus(true, onFocus ? () => onFocus(e) : () => {});\n        }}\n        onBlur={(e) => {\n          handleFocus(false, onBlur ? () => onBlur(e) : () => {});\n        }}\n      />\n    );\n  }\n};\n\nexport default memo(forwardRef(Input));\n"]}