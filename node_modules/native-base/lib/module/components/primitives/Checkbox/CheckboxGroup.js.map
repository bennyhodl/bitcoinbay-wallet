{"version":3,"sources":["CheckboxGroup.tsx"],"names":["React","createContext","memo","forwardRef","useCheckboxGroupState","useCheckboxGroup","useFormControlContext","Box","useHasResponsiveProps","CheckboxGroupContext","CheckboxGroup","size","_checkbox","colorScheme","props","ref","children","state","groupProps","accessibilityLabel","formControlContext"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,IAA/B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,gBAAT,QAAiC,6BAAjC;AACA,SAASC,qBAAT,QAAsC,8BAAtC;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAASC,qBAAT,QAAsC,sCAAtC;AAEA,OAAO,MAAMC,oBAAoB,gBAAGR,aAAa,CAC/C,IAD+C,CAA1C;;AAIP,SAASS,aAAT,CACE;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,SAAR;AAAmBC,EAAAA,WAAnB;AAAgC,KAAGC;AAAnC,CADF,EAEEC,GAFF,EAGE;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAeF,KAArB;AACA,QAAMG,KAAK,GAAGb,qBAAqB,CAACU,KAAD,CAAnC;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAiBb,gBAAgB,CACrC;AAAE,kBAAcS,KAAK,CAACK,kBAAtB;AAA0C,OAAGL;AAA7C,GADqC,EAErCG,KAFqC,CAAvC;AAKA,QAAMG,kBAAkB,GAAGd,qBAAqB,EAAhD,CARA,CASA;;AACA,MAAIE,qBAAqB,CAAC,EAAE,GAAGM,KAAL;AAAYH,IAAAA,IAAZ;AAAkBE,IAAAA;AAAlB,GAAD,CAAzB,EAA4D;AAC1D,WAAO,IAAP;AACD;;AACD,sBACE,oBAAC,oBAAD,CAAsB,QAAtB;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,IADK;AAELE,MAAAA,WAFK;AAGL,SAAGD,SAHE;AAIL,SAAGQ,kBAJE;AAKLH,MAAAA;AALK;AADT,kBASE,oBAAC,GAAD;AAAK,IAAA,UAAU,EAAC;AAAhB,KAAiCC,UAAjC,EAAiDJ,KAAjD;AAAwD,IAAA,GAAG,EAAEC;AAA7D,MACGC,QADH,CATF,CADF;AAeD;;AAED,4BAAed,IAAI,eAACC,UAAU,CAACO,aAAD,CAAX,CAAnB","sourcesContent":["import React, { createContext, memo, forwardRef } from 'react';\nimport { useCheckboxGroupState } from '@react-stately/checkbox';\nimport { useCheckboxGroup } from '@react-native-aria/checkbox';\nimport { useFormControlContext } from '../../composites/FormControl';\nimport type { ICheckboxGroupProps, ICheckboxContext } from './types';\nimport Box from '../Box';\nimport { useHasResponsiveProps } from '../../../hooks/useHasResponsiveProps';\n\nexport const CheckboxGroupContext = createContext<ICheckboxContext | null>(\n  null\n);\n\nfunction CheckboxGroup(\n  { size, _checkbox, colorScheme, ...props }: ICheckboxGroupProps,\n  ref?: any\n) {\n  const { children } = props;\n  const state = useCheckboxGroupState(props);\n  const { groupProps } = useCheckboxGroup(\n    { 'aria-label': props.accessibilityLabel, ...props },\n    state\n  );\n\n  const formControlContext = useFormControlContext();\n  //TODO: refactor for responsive prop\n  if (useHasResponsiveProps({ ...props, size, colorScheme })) {\n    return null;\n  }\n  return (\n    <CheckboxGroupContext.Provider\n      value={{\n        size,\n        colorScheme,\n        ..._checkbox,\n        ...formControlContext,\n        state,\n      }}\n    >\n      <Box alignItems=\"flex-start\" {...groupProps} {...props} ref={ref}>\n        {children}\n      </Box>\n    </CheckboxGroupContext.Provider>\n  );\n}\n\nexport default memo(forwardRef(CheckboxGroup));\n"]}